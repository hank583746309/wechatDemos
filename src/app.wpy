<style lang="less">
    @import './style/weui.less';
    page{
        background-color: #F8F8F8;
        font-size: 16px;
        font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;
    }
    .page__hd {
        padding: 40px;
    }
    .page__bd {
        padding-bottom: 40px;
    }
    .page__bd_spacing {
        padding-left: 15px;
        padding-right: 15px;
    }

    .page__ft{
        padding-bottom: 10px;
        text-align: center;
    }

    .page__title {
        text-align: left;
        font-size: 20px;
        font-weight: 400;
    }

    .page__desc {
        margin-top: 5px;
        color: #888888;
        text-align: left;
        font-size: 14px;
    }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/me',
      'pages/ui/index',
      'pages/nav/bottom',
      'pages/nav/top',
      'pages/nav/badge',
      'pages/chartimage/imgloader',
      'pages/api/index',
      'pages/funs/index',
      'pages/bugs/index',
      'pages/new/webview',
      'pages/ui/listempty',
      'pages/ui/listloadmore',
      'pages/ui/actionsheet'
    ],
    window: {
      backgroundTextStyle: 'black',
      navigationBarBackgroundColor: '#393A3F',
      navigationBarTitleText: '小程序样例大全',
      backgroundColor: '#F2F2F2',
      navigationBarTextStyle: 'light'
    },
    tabBar: {
      color: '#8a8a8a',
      selectedColor: '#2aa515',
      backgroundColor: '#FCFCFC',
      borderStyle: '#EBEBEB',
      list: [{
        pagePath: 'pages/index',
        text: '功能',
        iconPath: 'images/demo.png',
        selectedIconPath: 'images/demo_selected.png'
      },
      {
        pagePath: 'pages/me',
        text: '个人中心',
        iconPath: 'images/personal_un.png',
        selectedIconPath: 'images/personal.png'
      }]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    // 登录
    wepy.login({
      success: res => {
        // 发送 res.code 到后台换取 openId, sessionKey, unionId
      }
    })
    // 获取用户信息
    wepy.getSetting({
      success: res => {
        if (res.authSetting['scope.userInfo']) {
          // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
          wepy.getUserInfo({
            success: res => {
              // 可以将 res 发送给后台解码出 unionId
              this.globalData.userInfo = res.userInfo
              // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
              // 所以此处加入 callback 以防止这种情况
              if (this.userInfoReadyCallback) {
                this.userInfoReadyCallback(res)
              }
            }
          })
        }
      }
    })
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
App({
  globalData: {
    userInfo: null
  }
})
</script>
